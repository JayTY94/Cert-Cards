



11
UiPath Advanced Developer
In Orchestrator, newly created queues are empty by default. To populate them with items you can either use the upload functionality in Orchestrator, or Studio activities. The latter also enable you to change item statuses and process them. As soon as queue items are processed, they become transactions.





12
UiPath Advanced Developer
Init â€” This is the initial state which is used to read and store the config data in the dictionary, close all the unnecessary applications and open the required one. For example, if in the Process we need to upload an attachment in SAP, we first require the Bot to fetch the credentials from Orchestrator, open the SAP application and then login to SAP using the credentials.

If there is an error while initializing the applications or the credentials provided are invalid, an exception notification will be sent from within Init State and end the process.



13
UiPath Advanced Developer
In the Init state, the robot reads the configuration and initializes all applications. If this step is completed successfully, the robot moves on to the next state, GetSet Transaction Data.


If a System Error is encountered and within the max retry limit, the robot tries to initialize one more time before it moves on to the End Process.



14
UiPath Advanced Developer
Queue item statuses let you know if an item has been processed or not, and the stage of the process at a particular time. Item statuses are displayed in the Status column, in the Transactions page. Queue items can go through the following statuses:

New - the item has just been added to the queue with the Add Queue Item activity, or the item was postponed, or a deadline was added to it, or the item was added after an attempt and failure of a previous queue item with auto-retry enabled.
In Progress - the item was processed with the Get Transaction Item or the Add Transaction Item activity; when an item has this status, your custom progress status is also displayed, in the Progress column;



15
UiPath Advanced Developer
Queue item statuses:
Successful - the item was processed and sent to a Set Transaction Status activity, which changed its status to Successful;
Abandoned - the item remained in the In Progress status for a long period of time (approx. 24 hours) without being processed;
 Queue items processed by a long-running workflow do not get abandoned after 24 hours, if the job executing the queue item remains in a Suspended state.



16
UiPath Advanced Developer
Queue item statuses:
Retried - the item failed with an application exception and was retried. After the Robot finishes retrying the item, the status changes to Failed or Successful, according to your workflow.
Deleted - the item has been manually selected from the Transactions page and marked as deleted; an item with this status can no longer be processed.



17
UiPath Advanced Developer
The Set Transaction Status activity can be used to shape the logic of your project in a way that encapsulates this distinction in several ways:

If the Set Transaction Status activity fails the transaction with an Application Exception and the Auto Retry option in the Create Queue page is set to Yes when the queue is created, the queue item is retried.
By default, Orchestrator does not retry transactions which are failed due to Business Exceptions. This happens because an inconsistency between the transaction value and the business requirement means that there might be errors in the initial data which the queue items were created from. Additional actions might be required to fix this type of issue, and logging this type of exception can be useful.



18
UiPath Advanced Developer
According to this type of license, an Attended Robot can concurrently execute one foreground process (with UI interaction) and multiple background processes (without UI interaction).



19
UiPath Advanced Developer
Background Process Automation with Attended Robots rely on the user's session on the machine to run automations, these are started from Studio or UiPath Assistant and run in the same Windows Session as the user. As the automation happens in the same session, the robot is able to retrieve information and access files that are specific to the user.



20
UiPath Advanced Developer
Workflow Diff
Comparing changes between a process, library, project.json, or .txt file in a local repository and the latest version from GIT, TFS, or SVN is done using Workflow Diff in Studio. It shows a side-by-side comparison between the two files, highlighting added or removed activities, packages, variables, arguments.





21
UiPath Advanced Developer
Workflow Diff is used for comparing changes made in the project.json file, such as adding, updating or removing dependencies, modifying the runtime rule, making workflows private, or setting a Global Exception Handler.

ðŸ“˜
Note:

Workflow Diff must be used after the file is saved, and before it's checked into the source control repository.



22
UiPath Advanced Developer
Aside from Workflow Diff, Show History from the same context menu allows you to compare changes between two versions of the same file. This option is available for GIT, TFS, and SVN versioned files, either .xaml or project.json.





23
UiPath Advanced Developer
Automation on a virtual environment is done through visual recognition of elements rather than direct UI object interaction. This means that the RDP window needs to be visible at all times for most UI actions to work.



24
UiPath Advanced Developer
To redirect the Robot through a proxy server, you have to make multiple configurations on the Robot machine. They are split into the following steps:

Configure your preferred web browser, to ensure that the Robot machine can access Orchestrator through the indicated proxy server.
Edit the Robot and NuGet configuration files, to ensure that the connection between the Robot and Orchestrator is routed through the provided proxy server and that the activities packages and the automation processes can be downloaded through the specified proxy server.



25
UiPath Advanced Developer
The Service Mode Robot/Robot Service is launched by the Windows Service Control Manager under the Local System. It can open interactive Windows sessions, and has all the rights of a machine administrator. As such, it enables automatic session management (such as log on and log off) for unattended jobs. It is recommended to use the Service Mode Robot for large-scale platform deployments.





26
UiPath Advanced Developer
UiPath Assistant and Studio (clients) require communication with Robot Service. This is a separate Windows process, which is automatically started by the client if it is not already running, with the same elevation level as the client.



27
UiPath Advanced Developer
AI Robot - with an AI Robot license you can execute one ML training job OR serve two ML Skills concurrently.
AI Robot Pro - with an AI Robot license you can execute one ML training job OR serve two ML Skills concurrently and the runtime can use a GPU (for both serving a model or training a model).



28
UiPath Advanced Developer
2021.4.5 bug fix
A fix has been introduced that corrected a race condition when different priority jobs were run against a single robot. This caused the jobs to fail with the following error message: "A foreground process is already running. Only one foreground process can run at a time".




29
UiPath Advanced Developer
The User Mode Robot Service (UiPath.Service.UserHost.exe):
Windows application automatically launched if the SCM-managed Robot Service is not installed;
Best suited for attended automation scenarios;
Has the rights of the user that installed it;
Is not listed under Windows services;
Requires a user to be logged in to execute jobs from Orchestrator;
Deployed by default through UiPathStudioSetup.exe.




30
UiPath Advanced Developer
When the Robot receives the Cancel command, it cancels the execution of the current activity and starts executing the final steps. If this takes more than 3 seconds, the process is killed.

On the other hand, when the Robot receives the command to Kill a process, it first tries to Cancel the execution and if the execution is not finished in 3 seconds, the process is killed.




Process finished with exit code 0
C:\Users\jayoshimi\PycharmProjects\pythonProject\venv\Scripts\python.exe "C:/Users/jayoshimi/PycharmProjects/pythonProject/cards document.py"
1
hemic
Classically, the definition of a project has been contained in document, referred to as Project Initiation Document (PID), Project Definition Document (PDD), Project Quality Plan or Project Charter.



2
hemic
An outlay cost is a cost incurred in order to execute a strategy or acquire an asset. Outlay costs are also paid to vendors to acquire goods such as inventory or services, such as consulting or software design. They are concrete expenses that are actually incurred in order to achieve a goal.




3
UiPath Advanced Developer




4
UiPath Advanced Developer




5
UiPath Advanced Developer




6
UiPath Advanced Developer




7
UiPath Advanced Developer




8
UiPath Advanced Developer




9
UiPath Advanced Developer




10
UiPath Advanced Developer




11
UiPath Advanced Developer




12
UiPath Advanced Developer




13
UiPath Advanced Developer




14
UiPath Advanced Developer




15
UiPath Advanced Developer




16
UiPath Advanced Developer




17
UiPath Advanced Developer




18
UiPath Advanced Developer




19
UiPath Advanced Developer




20
UiPath Advanced Developer




21
UiPath Advanced Developer




22
UiPath Advanced Developer




23
UiPath Advanced Developer




24
UiPath Advanced Developer




25
UiPath Advanced Developer




26
UiPath Advanced Developer




27
UiPath Advanced Developer




28
UiPath Advanced Developer




29
UiPath Advanced Developer




30
UiPath Advanced Developer





Process finished with exit code 0
