



11
UiPath Developer
Assign
dataTable = dataTable.AsEnumerable().skip(intA).Take(intB).CopyToDataTable()

Cuts out a number of rows in dataTable by index. The first intA rows are skipped, and the next intB rows are included.
Remember that this requires a conversion to an IEnumerable and back to a DataTable.



12
hemic
When pulling Lumisight reports, remember to pick user types HRs, Employees, and Administrators.




13
UiPath Developer
WaitElementExist and WaitElementDisappear don't exist in Modern Studio. Use CheckAppState instead.



14
UiPath Developer
The UiPath Architecture has three layers
Client Layer: UiPath Robots/UiPath Studio
Server Layer: UiPath Orchestrator
Persistency Layer: Database



15
UiPath Developer
Folder
–
In Orchestrator, folders help replicate the organizational hierarchies, with the separation of automated processes between teams, segregation of process data, and access control for users. At the same time, when it makes sense, they allow sharing of the resources and assets.





16
UiPath Developer
Heartbeat
–
Attended and unattended robots send a heartbeat to Orchestrator every 30 seconds. This signals to Orchestrator that the connection is working.



17
UiPath Developer
Tenants and folders

Just like folders, tenants are meant to replicate organizational hierarchies within the same instance of Orchestrator.

From a hierarchy perspective, folders are subdivisions of tenants. And while in the folders case it's more about hierarchization and separation, tenants are clearly isolated from one another.





18
UiPath Developer
Webhook
–
Webhooks facilitate the communication between Orchestrator and other applications at API level. These are mapped at tenant level, which means they cannot be differentiated between folders and will provide information for the entire tenant.



19
UiPath Developer
There are two types of machines in Orchestrator:

Machine templates: this allows the connection to multiple workstations with a single API key.




20
UiPath Developer
There are two types of machines in Orchestrator:

Standard machines: this allows the connection between Orchestrator and a single machine. This is suitable for scenarios in which robots need to run on specific machines.



21
UiPath Developer
In Orchestrator, licenses are also called runtimes. They are allocated at machine template level, under Machines in the Tenant menu.

The number of runtimes allocated there should be matched with the maximum number of users which can run on a single machine connected using that machine template.



22
UiPath Developer
The process, the user and the machine template need to be mapped to the folder in order to run an unattended job. The package is a tenant entity, therefore not mapped to the folder.



23
UiPath Developer
The separation of processes based on UI interaction
Processes in Orchestrator are now differentiated between those that interact with the user interface (known as foreground processes) and those that don't, called background or headless processes.



24
UiPath Developer
Trigger allocation per user
Triggers can be set to allocate jobs dynamically, or to allocate the jobs only to a certain user.



25
UiPath Developer
Which of the following folder entities can be configured to be accessed/executed only by a certain unattended robot?


Asset

Trigger

Job




26
UiPath Developer
Which of the following Orchestrator entities are available through the Resources panel in Studio?
Processes
Assets
Queues




27
UiPath Developer
What happens when a new version of an existing libraries is published to Orchestrator?
Both versions will be available



28
UiPath Developer

Orchestrator admins can toggle between read-only and write privileges for each storage bucket.



29
UiPath Developer




30
UiPath Developer





Process finished with exit code 0
